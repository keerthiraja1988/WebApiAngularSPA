@using BindingModelSPA.User
@using BindingModelSPA.User.Role

@inject IJSRuntime _jsRuntime
<div class="modal" id="modalUserDetails" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="modalContentmodalUserDetails">
            <div class="card  bg-white" id="cardmodalUserDetails">
                <div class="card-header" id="cardHeaderModalmodalUserDetails">
                    <h4 class="pt-1">   User Details</h4>
                </div>
                <div class="card-body pl-3 pr-3 pt-0" id="editUserCardBody">
                    <div class="row shadow-sm bg-white rounded">
                        <div class="col-6 text-center">
                            <label>User Id</label>
                            <h4>@this.UserDetails.UserId</h4>
                        </div>
                        <div class="col-6 text-center">
                            <label>User Name</label>
                            <h4>@this.UserDetails.UserName</h4>
                            <input hidden="hidden" type="text" asp-for="user.UserName"
                                   class="form-control" id="txtUserName"
                                   placeholder="Enter User Name">
                        </div>
                    </div>
                    <div class="bs-component pt-1">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" style="cursor:pointer"
                                   id="tabProfile"
                                   onclick="@(async () => await this.ShowProfileTabAsync())">Profile</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" style="cursor:pointer"
                                   id="tabRoles"
                                   onclick="@(async () => await this.ShowRolesTabAsync())">Roles</a>
                            </li>
                        </ul>
                        <div id="myTabContent" class="tab-content">
                            <div class="tab-pane fade active show" id="profile">
                                <div class="row pt-3">
                                    <div class="col-6">
                                        <div class="form-group">
                                            <label> First Name</label>
                                            <input type="text" bind="@UserDetails.FirstName"
                                                   readonly class="form-control" id="txtFirstName"
                                                   placeholder="Enter First Name" />
                                        </div>
                                    </div>

                                    <div class="col-6">
                                        <div class="form-group">
                                            <label>Last Name</label>
                                            <input type="text" bind="@UserDetails.FirstName"
                                                   readonly class="form-control" id="txtLastName" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="form-group">

                                            <label> Email </label>
                                            <input type="text" asp-for="user.Email"
                                                   readonly class="form-control" id="txtEmail"
                                                   bind="@UserDetails.Email" />
                                        </div>
                                    </div>

                                    <div class="col-6">
                                        <div class="form-group pt-2">
                                            <div class="custom-control custom-switch">
                                                <input type="checkbox" class="custom-control-input" id="IsActive"
                                                       disabled="disabled" bind="@this.UserDetails.IsActive" />
                                                <label class="custom-control-label">Active</label>
                                            </div>
                                        </div>

                                        <div class="form-group pt-2">
                                            <div class="custom-control custom-switch">
                                                <input type="checkbox" class="custom-control-input" id="IsLocked"
                                                       disabled="disabled" bind="@this.UserDetails.IsLocked" />
                                                <label class="custom-control-label">Locked</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade " id="roles">
                                <div id="divUserRolesCards" class="row text-center pt-2" style="overflow-y: scroll;height: 360px;">

                                    @foreach (var userRoles in this.UserRoles.OrderBy(o => o.RoleId))
                                    {

                                        <div class="col-4  col-sm-4 col-md-4 col-lg-4 col-xl-4">
                                            <div class="card mb-4 box-shadow">
                                                <div class="card-header" style="display: flex;">

                                                    <div class="custom-control custom-switch " style="padding-top: 3px;">

                                                        <input type="checkbox" class="custom-control-input" name="@UserDetails.UserId"
                                                               disabled="disabled" value="@userRoles.RoleId"
                                                               id="@userRoles.RoleName"
                                                               bind="@userRoles.IsActive" />
                                                        <label class="display-4 custom-control-label" bind="@userRoles.RoleName"></label>
                                                    </div>

                                                    <span class="h4" style="  padding-left: 11px;">@userRoles.RoleName</span>
                                                </div>
                                                <div class="card-body" style="HEIGHT: 220PX;">
                                                    <ul class="list-unstyled mt-3 mb-4"></ul>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-footer text-center">
                    <div>

                        <button type="button" id="btnAddUserCancel"
                                onclick="@(async () => await this.DismissUserDetailsPopUp())"
                                class="btn btn-dark ml-3">
                            <i class="fas fa-times"></i>Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@functions {

    [Parameter]
    private UserBindingModel UserDetails { get; set; }

    [Parameter]
    private List<UserRoleBindingModel>
    UserRoles
    { get; set; }

    private async Task ShowProfileTabAsync()
    {
        await this._jsRuntime.InvokeAsync<object>
            ("homeController.showProfileTab");
    }

    private async Task ShowRolesTabAsync()
    {
        await this._jsRuntime.InvokeAsync<object>
            ("homeController.showRolesTab");
    }

    private async Task DismissUserDetailsPopUp()
    {
        await this._jsRuntime.InvokeAsync<object>
            ("homeController.HideModalPopUp", "modalUserDetails");
    }
}